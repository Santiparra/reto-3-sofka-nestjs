{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(http) {\n    this.http = http;\n    this.url_base = \"http://localhost:5500\";\n  }\n  buscarCustomers() {\n    return this.http.get(`${this.url_base}/customer`);\n  }\n  buscarCustomer(id) {\n    return this.http.get(`${this.url_base}/customer/${id}`);\n  }\n  crearCustomer(customer) {\n    return this.http.post(`${this.url_base}/auth/registrar`, customer);\n  }\n  editarCustomer(id, customer) {\n    return this.http.patch(`${this.url_base}/customer/editar?customerID=${id}`, customer);\n  }\n  actualizarCustomer(id, customer) {\n    return this.http.put(`${this.url_base}/customer/actualizar?customerID=${id}`, customer);\n  }\n  borrarCustomer(id) {\n    return this.http.delete(`${this.url_base}/customer/borrar?customerID=${id}`);\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,aAAQ,GAAW,uBAAuB;EAEF;EAExCC,eAAe;IACb,OAAQ,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,GAAG,IAAI,CAACC,QAAQ,WAAW,CAAC;EAChE;EAEAC,cAAc,CAAEC,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,QAAQ,aAAaE,EAAE,EAAE,CAAC;EACnE;EAEAC,aAAa,CAAEC,QAAkB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,GAAG,IAAI,CAACL,QAAQ,iBAAiB,EAAEI,QAAQ,CAAC;EAC9E;EAEAE,cAAc,CAAEJ,EAAU,EAAGE,QAAkB;IAC7C,OAAO,IAAI,CAACP,IAAI,CAACU,KAAK,CAAW,GAAG,IAAI,CAACP,QAAQ,+BAA+BE,EAAE,EAAE,EAAEE,QAAQ,CAAC;EACjG;EAEAI,kBAAkB,CAAEN,EAAU,EAAEE,QAAkB;IAChD,OAAO,IAAI,CAACP,IAAI,CAACY,GAAG,CAAW,GAAG,IAAI,CAACT,QAAQ,mCAAmCE,EAAE,EAAE,EAAEE,QAAQ,CAAC;EACnG;EAEAM,cAAc,CAAER,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CAAW,GAAG,IAAI,CAACX,QAAQ,+BAA+BE,EAAE,EAAE,CAAC;EACxF;;AA5BWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAiB,SAAfjB,eAAe;EAAAkB,YAFd;AAAM","names":["CustomerService","constructor","http","buscarCustomers","get","url_base","buscarCustomer","id","crearCustomer","customer","post","editarCustomer","patch","actualizarCustomer","put","borrarCustomer","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/trini/repos/Sofka/Angular/backups/reto-3-sofka-nestjs/cliente/src/app/services/customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Customer } from '../interfaces/Customer';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  url_base: string = \"http://localhost:5500\";\n\n  constructor(private http: HttpClient) { }\n\n  buscarCustomers( ): Observable<Customer[]> {\n    return  this.http.get<Customer[]>(`${this.url_base}/customer`)\n  }\n  \n  buscarCustomer( id: string ): Observable<Customer> {\n    return this.http.get<Customer>(`${this.url_base}/customer/${id}`)\n  }\n\n  crearCustomer( customer: Customer ): Observable<Customer> {\n    return this.http.post<Customer>(`${this.url_base}/auth/registrar`, customer)\n  }\n\n  editarCustomer( id: string , customer: Customer ): Observable<Customer> {\n    return this.http.patch<Customer>(`${this.url_base}/customer/editar?customerID=${id}`, customer)\n  }\n\n  actualizarCustomer( id: string, customer: Customer ): Observable<Customer> {\n    return this.http.put<Customer>(`${this.url_base}/customer/actualizar?customerID=${id}`, customer)\n  }\n\n  borrarCustomer( id: string ): Observable<Customer> {\n    return this.http.delete<Customer>(`${this.url_base}/customer/borrar?customerID=${id}`)\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}